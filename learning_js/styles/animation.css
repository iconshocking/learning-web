body {
  background: #6c373f;
  display: flex;
  flex-direction: column;
  align-items: center;
}

#alice-container {
  width: 30vw;
  display: grid;
  place-items: center;
  grid-template-areas:
    "a1 . ."
    ". a2 ."
    ". . a3";
}

#alice1 {
  grid-area: a1;
}

#alice2 {
  grid-area: a2;
}

#alice3 {
  grid-area: a3;
}

.animate {
  /* duration - easing function (default is 'ease') - delay - iterations - play direction - fill
  state (whether the changes should be preserved at the end of the animation, start when reversing)
  - playing state - name */
  animation: 1.25s ease 0.25s 5 alternate none running fadein-left;
  overflow: hidden;
  background-color: aqua;
}

@keyframes fadein-left {
  0% {
    transform: translateX(-0.6rem);
    opacity: 0;
    height: 0;
    background-color: orange;
  }

  /* note: like transitions, animations require non-dynamic dimensions */
  100% {
    transform: translateX(0);
    opacity: 1;
    height: 10vh;
    background-color: grey;
  }
}

/* NOTE: the same animation cannot be reused once it has run to completion, so setting a reverse
animation using the same original animation but played in reverse will not animate unless the
element did not still have the original animation set on it via CSS selector at the time of swapping
to the reverse animation (the same applies to animations via JS, I think). */